

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Sep 18 17:05:52 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 22/03/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170     0008                     _PORTDbits	set	8
   171     0007                     _PORTC	set	7
   172     0088                     _TRISD	set	136
   173     0087                     _TRISC	set	135
   174                           
   175                           	psect	strings
   176     0003                     __pstrings:
   177     0003                     stringtab:
   178     0003                     __stringtab:
   179     0003                     stringcode:	
   180                           ;	String table - string pointers are 1 byte each
   181                           
   182     0003                     stringdir:
   183     0003  3000               	movlw	high stringdir
   184     0004  008A               	movwf	10
   185     0005  0804               	movf	4,w
   186     0006  0A84               	incf	4,f
   187     0007  0782               	addwf	2,f
   188     0008                     __stringbase:
   189     0008  3400               	retlw	0
   190     0009                     __end_of__stringtab:
   191     0009                     STR_2:
   192     0009  3447               	retlw	71	;'G'
   193     000A  3455               	retlw	85	;'U'
   194     000B  3450               	retlw	80	;'P'
   195     000C  3454               	retlw	84	;'T'
   196     000D  3441               	retlw	65	;'A'
   197     000E  3400               	retlw	0
   198     000F                     STR_1:
   199     000F  3441               	retlw	65	;'A'
   200     0010  3452               	retlw	82	;'R'
   201     0011  3459               	retlw	89	;'Y'
   202     0012  3441               	retlw	65	;'A'
   203     0013  344E               	retlw	78	;'N'
   204     0014  3400               	retlw	0
   205                           
   206                           	psect	cinit
   207     07FC                     start_initialization:	
   208                           ; #config settings
   209                           
   210     07FC                     __initialization:
   211     07FC                     end_of_initialization:	
   212                           ;End of C runtime variable initialization code
   213                           
   214     07FC                     __end_of__initialization:
   215     07FC  0183               	clrf	3
   216     07FD  120A  118A  2F68   	ljmp	_main	;jump to C main() function
   217                           
   218                           	psect	cstackCOMMON
   219     0070                     __pcstackCOMMON:
   220     0070                     ?_LCD_data:
   221     0070                     ??_LCD_data:	
   222                           ; 1 bytes @ 0x0
   223                           
   224     0070                     ?_LCD_command:	
   225                           ; 1 bytes @ 0x0
   226                           
   227     0070                     ??_LCD_command:	
   228                           ; 1 bytes @ 0x0
   229                           
   230     0070                     ?_LCD_initialise:	
   231                           ; 1 bytes @ 0x0
   232                           
   233     0070                     ?_LCD_run:	
   234                           ; 1 bytes @ 0x0
   235                           
   236     0070                     ?_main:	
   237                           ; 1 bytes @ 0x0
   238                           
   239                           
   240                           ; 1 bytes @ 0x0
   241     0070                     	ds	3
   242     0073                     LCD_data@data:
   243     0073                     LCD_command@cmd:	
   244                           ; 1 bytes @ 0x3
   245                           
   246                           
   247                           ; 1 bytes @ 0x3
   248     0073                     	ds	1
   249     0074                     ?_LCD_string:
   250     0074                     ??_LCD_initialise:	
   251                           ; 1 bytes @ 0x4
   252                           
   253     0074                     LCD_string@num:	
   254                           ; 1 bytes @ 0x4
   255                           
   256                           
   257                           ; 1 bytes @ 0x4
   258     0074                     	ds	1
   259     0075                     ??_LCD_string:
   260     0075                     LCD_string@str:	
   261                           ; 1 bytes @ 0x5
   262                           
   263                           
   264                           ; 1 bytes @ 0x5
   265     0075                     	ds	1
   266     0076                     LCD_string@i:
   267                           
   268                           ; 1 bytes @ 0x6
   269     0076                     	ds	1
   270     0077                     ??_LCD_run:
   271     0077                     ??_main:	
   272                           ; 1 bytes @ 0x7
   273                           
   274                           
   275                           	psect	maintext
   276     0768                     __pmaintext:	
   277                           ; 1 bytes @ 0x7
   278 ;;
   279 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   280 ;;
   281 ;; *************** function _main *****************
   282 ;; Defined at:
   283 ;;		line 148 in file "main.c"
   284 ;; Parameters:    Size  Location     Type
   285 ;;		None
   286 ;; Auto vars:     Size  Location     Type
   287 ;;		None
   288 ;; Return value:  Size  Location     Type
   289 ;;                  1    wreg      void 
   290 ;; Registers used:
   291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   292 ;; Tracked objects:
   293 ;;		On entry : B00/0
   294 ;;		On exit  : 0/0
   295 ;;		Unchanged: 0/0
   296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   297 ;;      Params:         0       0       0       0       0
   298 ;;      Locals:         0       0       0       0       0
   299 ;;      Temps:          0       0       0       0       0
   300 ;;      Totals:         0       0       0       0       0
   301 ;;Total ram usage:        0 bytes
   302 ;; Hardware stack levels required when called: 3
   303 ;; This function calls:
   304 ;;		_LCD_run
   305 ;; This function is called by:
   306 ;;		Startup code after reset
   307 ;; This function uses a non-reentrant model
   308 ;;
   309                           
   310     0768                     _main:	
   311                           ;psect for function _main
   312                           
   313     0768                     l646:	
   314                           ;incstack = 0
   315                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   316                           
   317                           
   318                           ;main.c: 153:     LCD_run();
   319     0768  120A  118A  27D6  120A  118A  	fcall	_LCD_run
   320     076D                     l36:
   321     076D  120A  118A  2800   	ljmp	start
   322     0770                     __end_of_main:
   323                           
   324                           	psect	text1
   325     07D6                     __ptext1:	
   326 ;; *************** function _LCD_run *****************
   327 ;; Defined at:
   328 ;;		line 134 in file "main.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;		None
   331 ;; Auto vars:     Size  Location     Type
   332 ;;		None
   333 ;; Return value:  Size  Location     Type
   334 ;;                  1    wreg      void 
   335 ;; Registers used:
   336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   337 ;; Tracked objects:
   338 ;;		On entry : 0/0
   339 ;;		On exit  : 0/0
   340 ;;		Unchanged: 0/0
   341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   342 ;;      Params:         0       0       0       0       0
   343 ;;      Locals:         0       0       0       0       0
   344 ;;      Temps:          0       0       0       0       0
   345 ;;      Totals:         0       0       0       0       0
   346 ;;Total ram usage:        0 bytes
   347 ;; Hardware stack levels used: 1
   348 ;; Hardware stack levels required when called: 2
   349 ;; This function calls:
   350 ;;		_LCD_command
   351 ;;		_LCD_initialise
   352 ;;		_LCD_string
   353 ;; This function is called by:
   354 ;;		_main
   355 ;; This function uses a non-reentrant model
   356 ;;
   357                           
   358     07D6                     _LCD_run:	
   359                           ;psect for function _LCD_run
   360                           
   361     07D6                     l634:	
   362                           ;incstack = 0
   363                           ; Regs used in _LCD_run: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   364                           
   365                           
   366                           ;main.c: 136:     TRISC = 0x00;
   367     07D6  1683               	bsf	3,5	;RP0=1, select bank1
   368     07D7  1303               	bcf	3,6	;RP1=0, select bank1
   369     07D8  0187               	clrf	7	;volatile
   370                           
   371                           ;main.c: 137:     TRISD = 0x00;
   372     07D9  0188               	clrf	8	;volatile
   373     07DA                     l636:
   374                           
   375                           ;main.c: 138:     LCD_initialise();
   376     07DA  120A  118A  2789  120A  118A  	fcall	_LCD_initialise
   377     07DF                     l638:
   378                           
   379                           ;main.c: 140:     {;main.c: 141:         LCD_string("ARYAN",5);
   380     07DF  3005               	movlw	5
   381     07E0  00F4               	movwf	LCD_string@num
   382     07E1  3007               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   383     07E2  120A  118A  27BB  120A  118A  	fcall	_LCD_string
   384     07E7                     l640:
   385                           
   386                           ;main.c: 142:         LCD_command(0x81);
   387     07E7  3081               	movlw	129
   388     07E8  120A  118A  2770  120A  118A  	fcall	_LCD_command
   389     07ED                     l642:
   390                           
   391                           ;main.c: 143:         LCD_command(0xC1);
   392     07ED  30C1               	movlw	193
   393     07EE  120A  118A  2770  120A  118A  	fcall	_LCD_command
   394     07F3                     l644:
   395                           
   396                           ;main.c: 144:         LCD_string("GUPTA",5);
   397     07F3  3005               	movlw	5
   398     07F4  00F4               	movwf	LCD_string@num
   399     07F5  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   400     07F6  120A  118A  27BB  120A  118A  	fcall	_LCD_string
   401     07FB                     l31:	
   402                           ;main.c: 145:         break;
   403                           
   404     07FB  0008               	return
   405     07FC                     __end_of_LCD_run:
   406                           
   407                           	psect	text2
   408     07BB                     __ptext2:	
   409 ;; *************** function _LCD_string *****************
   410 ;; Defined at:
   411 ;;		line 120 in file "main.c"
   412 ;; Parameters:    Size  Location     Type
   413 ;;  str             1    wreg     PTR unsigned char 
   414 ;;		 -> STR_2(6), STR_1(6), 
   415 ;;  num             1    4[COMMON] unsigned char 
   416 ;; Auto vars:     Size  Location     Type
   417 ;;  str             1    5[COMMON] PTR unsigned char 
   418 ;;		 -> STR_2(6), STR_1(6), 
   419 ;;  i               1    6[COMMON] unsigned char 
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   424 ;; Tracked objects:
   425 ;;		On entry : 0/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   429 ;;      Params:         1       0       0       0       0
   430 ;;      Locals:         2       0       0       0       0
   431 ;;      Temps:          0       0       0       0       0
   432 ;;      Totals:         3       0       0       0       0
   433 ;;Total ram usage:        3 bytes
   434 ;; Hardware stack levels used: 1
   435 ;; Hardware stack levels required when called: 1
   436 ;; This function calls:
   437 ;;		_LCD_data
   438 ;; This function is called by:
   439 ;;		_LCD_run
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443     07BB                     _LCD_string:	
   444                           ;psect for function _LCD_string
   445                           
   446                           
   447                           ;incstack = 0
   448                           ; Regs used in _LCD_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   449                           ;LCD_string@str stored from wreg
   450     07BB  00F5               	movwf	LCD_string@str
   451     07BC                     l626:
   452                           
   453                           ;main.c: 120: void LCD_string(unsigned char *str,unsigned char num);main.c: 121: {;main.
      +                          c: 122:     for(unsigned char i=0; i<num; i++)
   454     07BC  01F6               	clrf	LCD_string@i
   455     07BD  2FCF               	goto	l632
   456     07BE                     l628:
   457                           
   458                           ;main.c: 123:     {;main.c: 124:         LCD_data(str[i]);
   459     07BE  0876               	movf	LCD_string@i,w
   460     07BF  0775               	addwf	LCD_string@str,w
   461     07C0  0084               	movwf	4
   462     07C1  120A  118A  2003  120A  118A  	fcall	stringdir
   463     07C6  120A  118A  27A2  120A  118A  	fcall	_LCD_data
   464     07CB                     l630:
   465                           
   466                           ;main.c: 125:     }
   467     07CB  3001               	movlw	1
   468     07CC  00FF               	movwf	btemp+1
   469     07CD  087F               	movf	btemp+1,w
   470     07CE  07F6               	addwf	LCD_string@i,f
   471     07CF                     l632:
   472     07CF  0874               	movf	LCD_string@num,w
   473     07D0  0276               	subwf	LCD_string@i,w
   474     07D1  1C03               	skipc
   475     07D2  2FD4               	goto	u21
   476     07D3  2FD5               	goto	u20
   477     07D4                     u21:
   478     07D4  2FBE               	goto	l628
   479     07D5                     u20:
   480     07D5                     l22:
   481     07D5  0008               	return
   482     07D6                     __end_of_LCD_string:
   483                           
   484                           	psect	text3
   485     07A2                     __ptext3:	
   486 ;; *************** function _LCD_data *****************
   487 ;; Defined at:
   488 ;;		line 96 in file "main.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;  data            1    wreg     unsigned char 
   491 ;; Auto vars:     Size  Location     Type
   492 ;;  data            1    3[COMMON] unsigned char 
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      void 
   495 ;; Registers used:
   496 ;;		wreg
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   502 ;;      Params:         0       0       0       0       0
   503 ;;      Locals:         1       0       0       0       0
   504 ;;      Temps:          3       0       0       0       0
   505 ;;      Totals:         4       0       0       0       0
   506 ;;Total ram usage:        4 bytes
   507 ;; Hardware stack levels used: 1
   508 ;; This function calls:
   509 ;;		Nothing
   510 ;; This function is called by:
   511 ;;		_LCD_string
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515     07A2                     _LCD_data:	
   516                           ;psect for function _LCD_data
   517                           
   518                           
   519                           ;incstack = 0
   520                           ; Regs used in _LCD_data: [wreg]
   521                           ;LCD_data@data stored from wreg
   522     07A2  00F3               	movwf	LCD_data@data
   523     07A3                     l580:
   524                           
   525                           ;main.c: 96: void LCD_data(unsigned char data);main.c: 97: {;main.c: 101:     PORTC = da
      +                          ta;
   526     07A3  0873               	movf	LCD_data@data,w
   527     07A4  1283               	bcf	3,5	;RP0=0, select bank0
   528     07A5  1303               	bcf	3,6	;RP1=0, select bank0
   529     07A6  0087               	movwf	7	;volatile
   530     07A7                     l582:
   531                           
   532                           ;main.c: 102:     PORTDbits.RD0 = 1;
   533     07A7  1408               	bsf	8,0	;volatile
   534     07A8                     l584:
   535                           
   536                           ;main.c: 103:     PORTDbits.RD1 = 0;
   537     07A8  1088               	bcf	8,1	;volatile
   538     07A9                     l586:
   539                           
   540                           ;main.c: 104:     PORTDbits.RD2 = 1;
   541     07A9  1508               	bsf	8,2	;volatile
   542                           
   543                           ;main.c: 105:     _delay((unsigned long)((50)*(20000000/4000.0)));
   544     07AA  3002               	movlw	2
   545     07AB  00F2               	movwf	??_LCD_data+2
   546     07AC  3045               	movlw	69
   547     07AD  00F1               	movwf	??_LCD_data+1
   548     07AE  30A9               	movlw	169
   549     07AF  00F0               	movwf	??_LCD_data
   550     07B0                     u37:
   551     07B0  0BF0               	decfsz	??_LCD_data,f
   552     07B1  2FB0               	goto	u37
   553     07B2  0BF1               	decfsz	??_LCD_data+1,f
   554     07B3  2FB0               	goto	u37
   555     07B4  0BF2               	decfsz	??_LCD_data+2,f
   556     07B5  2FB0               	goto	u37
   557     07B6  2FB7               	nop2
   558     07B7                     l588:
   559                           
   560                           ;main.c: 106:     PORTDbits.RD2 = 0;
   561     07B7  1283               	bcf	3,5	;RP0=0, select bank0
   562     07B8  1303               	bcf	3,6	;RP1=0, select bank0
   563     07B9  1108               	bcf	8,2	;volatile
   564     07BA                     l13:
   565     07BA  0008               	return
   566     07BB                     __end_of_LCD_data:
   567                           
   568                           	psect	text4
   569     0789                     __ptext4:	
   570 ;; *************** function _LCD_initialise *****************
   571 ;; Defined at:
   572 ;;		line 127 in file "main.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;		None
   575 ;; Auto vars:     Size  Location     Type
   576 ;;		None
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		wreg, status,2, status,0, pclath, cstack
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   586 ;;      Params:         0       0       0       0       0
   587 ;;      Locals:         0       0       0       0       0
   588 ;;      Temps:          0       0       0       0       0
   589 ;;      Totals:         0       0       0       0       0
   590 ;;Total ram usage:        0 bytes
   591 ;; Hardware stack levels used: 1
   592 ;; Hardware stack levels required when called: 1
   593 ;; This function calls:
   594 ;;		_LCD_command
   595 ;; This function is called by:
   596 ;;		_LCD_run
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600     0789                     _LCD_initialise:	
   601                           ;psect for function _LCD_initialise
   602                           
   603     0789                     l608:	
   604                           ;incstack = 0
   605                           ; Regs used in _LCD_initialise: [wreg+status,2+status,0+pclath+cstack]
   606                           
   607                           
   608                           ;main.c: 129:     LCD_command(0x38);
   609     0789  3038               	movlw	56
   610     078A  120A  118A  2770  120A  118A  	fcall	_LCD_command
   611                           
   612                           ;main.c: 130:     LCD_command(0x06);
   613     078F  3006               	movlw	6
   614     0790  120A  118A  2770  120A  118A  	fcall	_LCD_command
   615                           
   616                           ;main.c: 131:     LCD_command(0x0C);
   617     0795  300C               	movlw	12
   618     0796  120A  118A  2770  120A  118A  	fcall	_LCD_command
   619                           
   620                           ;main.c: 132:     LCD_command(0x01);
   621     079B  3001               	movlw	1
   622     079C  120A  118A  2770  120A  118A  	fcall	_LCD_command
   623     07A1                     l25:
   624     07A1  0008               	return
   625     07A2                     __end_of_LCD_initialise:
   626                           
   627                           	psect	text5
   628     0770                     __ptext5:	
   629 ;; *************** function _LCD_command *****************
   630 ;; Defined at:
   631 ;;		line 108 in file "main.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;  cmd             1    wreg     unsigned char 
   634 ;; Auto vars:     Size  Location     Type
   635 ;;  cmd             1    3[COMMON] unsigned char 
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   645 ;;      Params:         0       0       0       0       0
   646 ;;      Locals:         1       0       0       0       0
   647 ;;      Temps:          3       0       0       0       0
   648 ;;      Totals:         4       0       0       0       0
   649 ;;Total ram usage:        4 bytes
   650 ;; Hardware stack levels used: 1
   651 ;; This function calls:
   652 ;;		Nothing
   653 ;; This function is called by:
   654 ;;		_LCD_initialise
   655 ;;		_LCD_run
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659     0770                     _LCD_command:	
   660                           ;psect for function _LCD_command
   661                           
   662                           
   663                           ;incstack = 0
   664                           ; Regs used in _LCD_command: [wreg]
   665                           ;LCD_command@cmd stored from wreg
   666     0770  00F3               	movwf	LCD_command@cmd
   667     0771                     l590:
   668                           
   669                           ;main.c: 108: void LCD_command(unsigned char cmd);main.c: 109: {;main.c: 113:     PORTC 
      +                          = cmd;
   670     0771  0873               	movf	LCD_command@cmd,w
   671     0772  1283               	bcf	3,5	;RP0=0, select bank0
   672     0773  1303               	bcf	3,6	;RP1=0, select bank0
   673     0774  0087               	movwf	7	;volatile
   674     0775                     l592:
   675                           
   676                           ;main.c: 114:     PORTDbits.RD0 = 0;
   677     0775  1008               	bcf	8,0	;volatile
   678     0776                     l594:
   679                           
   680                           ;main.c: 115:     PORTDbits.RD1 = 0;
   681     0776  1088               	bcf	8,1	;volatile
   682     0777                     l596:
   683                           
   684                           ;main.c: 116:     PORTDbits.RD2 = 1;
   685     0777  1508               	bsf	8,2	;volatile
   686                           
   687                           ;main.c: 117:     _delay((unsigned long)((50)*(20000000/4000.0)));
   688     0778  3002               	movlw	2
   689     0779  00F2               	movwf	??_LCD_command+2
   690     077A  3045               	movlw	69
   691     077B  00F1               	movwf	??_LCD_command+1
   692     077C  30A9               	movlw	169
   693     077D  00F0               	movwf	??_LCD_command
   694     077E                     u47:
   695     077E  0BF0               	decfsz	??_LCD_command,f
   696     077F  2F7E               	goto	u47
   697     0780  0BF1               	decfsz	??_LCD_command+1,f
   698     0781  2F7E               	goto	u47
   699     0782  0BF2               	decfsz	??_LCD_command+2,f
   700     0783  2F7E               	goto	u47
   701     0784  2F85               	nop2
   702     0785                     l598:
   703                           
   704                           ;main.c: 118:     PORTDbits.RD2 = 0;
   705     0785  1283               	bcf	3,5	;RP0=0, select bank0
   706     0786  1303               	bcf	3,6	;RP1=0, select bank0
   707     0787  1108               	bcf	8,2	;volatile
   708     0788                     l16:
   709     0788  0008               	return
   710     0789                     __end_of_LCD_command:
   711     007E                     btemp	set	126	;btemp
   712     007E                     wtemp0	set	126
   713                           
   714                           	psect	config
   715                           
   716                           ;Config register CONFIG @ 0x2007
   717                           ;	Oscillator Selection bits
   718                           ;	FOSC = HS, HS oscillator
   719                           ;	Watchdog Timer Enable bit
   720                           ;	WDTE = OFF, WDT disabled
   721                           ;	Power-up Timer Enable bit
   722                           ;	PWRTE = OFF, PWRT disabled
   723                           ;	Brown-out Reset Enable bit
   724                           ;	BOREN = ON, BOR enabled
   725                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   726                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   727                           ;	Data EEPROM Memory Code Protection bit
   728                           ;	CPD = OFF, Data EEPROM code protection off
   729                           ;	Flash Program Memory Write Enable bits
   730                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   731                           ;	In-Circuit Debugger Mode bit
   732                           ;	DEBUG = 0x1, unprogrammed default
   733                           ;	Flash Program Memory Code Protection bit
   734                           ;	CP = OFF, Code protection off
   735     2007                     	org	8199
   736     2007  3FFA               	dw	16378

Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_string@str	PTR unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), STR_2(CODE[6]), 


Critical Paths under _main in COMMON

    _LCD_run->_LCD_string
    _LCD_string->_LCD_data
    _LCD_initialise->_LCD_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     353
                            _LCD_run
 ---------------------------------------------------------------------------------
 (1) _LCD_run                                              0     0      0     353
                        _LCD_command
                     _LCD_initialise
                         _LCD_string
 ---------------------------------------------------------------------------------
 (2) _LCD_string                                           3     2      1     323
                                              4 COMMON     3     2      1
                           _LCD_data
 ---------------------------------------------------------------------------------
 (3) _LCD_data                                             4     4      0      15
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (2) _LCD_initialise                                       0     0      0      15
                        _LCD_command
 ---------------------------------------------------------------------------------
 (3) _LCD_command                                          4     4      0      15
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_run
     _LCD_command
     _LCD_initialise
       _LCD_command
     _LCD_string
       _LCD_data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Sep 18 17:05:52 2023

                      pc 0002                       l13 07BA                       l22 07D5  
                     l31 07FB                       l16 0788                       l25 07A1  
                     l36 076D                       u20 07D5                       u21 07D4  
                     u37 07B0                       u47 077E                       fsr 0004  
                    l630 07CB                      l608 0789                      l632 07CF  
                    l640 07E7                      l626 07BC                      l642 07ED  
                    l634 07D6                      l580 07A3                      l628 07BE  
                    l644 07F3                      l636 07DA                      l590 0771  
                    l582 07A7                      l638 07DF                      l646 0768  
                    l592 0775                      l584 07A8                      l594 0776  
                    l586 07A9                      l596 0777                      l588 07B7  
                    l598 0785                      fsr0 0004              ?_LCD_string 0074  
        __end_of_LCD_run 07FC                     STR_1 000F                     STR_2 0009  
           ?_LCD_command 0070                     _main 0768                     btemp 007E  
                   start 0000         __end_of_LCD_data 07BB                    ?_main 0070  
                  _PORTC 0007                    _TRISC 0087                    _TRISD 0088  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 0770                   ??_main 0077  
              ??_LCD_run 0077              LCD_string@i 0076             LCD_data@data 0073  
__end_of__initialization 07FC                ?_LCD_data 0070           __pcstackCOMMON 0070  
         _LCD_initialise 0789             ??_LCD_string 0075               ??_LCD_data 0070  
             __pmaintext 0768   __end_of_LCD_initialise 07A2       __end_of_LCD_string 07D6  
                _LCD_run 07D6               __stringtab 0003          ?_LCD_initialise 0070  
                __ptext1 07D6                  __ptext2 07BB                  __ptext3 07A2  
                __ptext4 0789                  __ptext5 0770     end_of_initialization 07FC  
              _PORTDbits 0008      start_initialization 07FC            ??_LCD_command 0070  
               ?_LCD_run 0070                ___latbits 0002         ??_LCD_initialise 0074  
    __end_of_LCD_command 0789            LCD_string@num 0074            LCD_string@str 0075  
              __pstrings 0003                 _LCD_data 07A2              __stringbase 0008  
            _LCD_command 0770       __end_of__stringtab 0009               _LCD_string 07BB  
              stringcode 0003                 stringdir 0003                 stringtab 0003  
         LCD_command@cmd 0073  
